name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
  
      - name: Project Setup  
        run: |
          ./mvnw clean compile
          ./mvnw test-compile
    
      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          custom_instructions: |
            This is a Spring Boot 3.4.4 application with Camunda BPM 7.23.0 running on Java 21.
            The project uses Maven for build management and H2 database for development.
            Key components:
            - REST API for BPMN process execution (/api/process/execute)
            - Camunda service delegates for external API integration
            - Sequential and parallel process definitions (BPMN)
            - Embedded Camunda engine with web applications
            
            Use Maven commands (./mvnw) for build operations.
            Server runs on localhost:8080 with Camunda UI at /camunda/

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands  
          # allowed_tools: "Bash(./mvnw clean),Bash(./mvnw compile),Bash(./mvnw test),Bash(./mvnw spring-boot:run)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          # custom_instructions: |
          #   Follow Spring Boot and Java coding standards
          #   Ensure all service delegates have proper error handling
          #   Use proper BPMN 2.0 modeling conventions
          #   Write JUnit tests for all business logic
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   JAVA_HOME: /usr/lib/jvm/temurin-21-jdk-amd64
          #   MAVEN_OPTS: "-Xmx1024m"

